# this container should be prepared for golang
language: go

# mongodb should be running
services: mongodb

# addons:
#   apt:
#     sources:
#     - mongodb-upstart
#     packages:
#     - mongodb-org
#     - mongodb-org-server
#     - mongodb-org-shell
#     - mongodb-org-tools

# install all third party go packages that we use
install:
 - go get github.com/gorilla/handlers
 - go get github.com/gorilla/mux
 - go get github.com/gorilla/context
 - go get github.com/stretchr/testify
 - go get gopkg.in/mgo.v2
 - go get gopkg.in/mgo.v2/bson
 - go get github.com/ARGOeu/go-lru-cache
 - go get gopkg.in/gcfg.v1
 - go get github.com/twinj/uuid
 - go get github.com/axw/gocov/...
 - go get github.com/AlekSi/gocov-xml
 - go get -u github.com/tools/godep

before_script:
# Standard mongodb 2.6 installation procedure (mongo docs)
  - sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7F0CEB10
  - echo 'deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen' | sudo tee /etc/apt/sources.list.d/mongodb.list
  - sudo apt-get update
  - sudo apt-get install -y mongodb-org=2.6.6 mongodb-org-server=2.6.6 mongodb-org-shell=2.6.6 mongodb-org-mongos=2.6.6 mongodb-org-tools=2.6.6
# Wait for mongod service to become available
  - until nc -z localhost 27017 ; do echo Waiting for MongoDB; sleep 1; done
# Check mongodb version
  - mongo --version


# Run all unittests sequentally in order to not push mongodb resources
script:
 - gocov test ./... | gocov-xml > coverage.xml
